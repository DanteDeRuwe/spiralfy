@attribute [PiralExtension("header-items")]

@inject NavigationManager _navManager
@inject ILogger<Login> _logger;

@if(_username is null)
{
    <a href="@_authUri" class="Button" data-primary="true">Login via Spotify</a>
}
else
{
    <p>Welcome @_username</p>
}


@code {
    private Uri _authUri;
    private string _username;
    private ISpiralfyService _service;

    protected override async Task OnInitializedAsync()
    {
        var token = new Uri(_navManager.Uri).ExtractAccessToken();
        var redirectUri = _navManager.ToAbsoluteUri(_navManager.BaseUri + "play/");
        var loginRequest = new LoginRequest(redirectUri, "a8e9b67342b740479fcb00609a46d354", LoginRequest.ResponseType.Token)
        {
            Scope = new[]
            {
                Scopes.UserModifyPlaybackState, 
                Scopes.UserReadCurrentlyPlaying, 
                Scopes.UserReadPlaybackState, 
                Scopes.UserReadPlaybackPosition,
                Scopes.PlaylistReadPrivate,
                Scopes.UserLibraryRead,
                Scopes.Streaming,
                Scopes.UserReadEmail,
                Scopes.UserReadPrivate,
                Scopes.UserLibraryModify,
            }
        };
        _authUri = loginRequest.ToUri();
        
        if(token is not null)
        {
            var spotify = new SpotifyClient(token);
            _service = new SpiralfyService(spotify);
            _username = (await _service.GetCurrentUser())?.DisplayName;
        }
    }
}
