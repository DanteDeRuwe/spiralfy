@page "/play"
@using Spiralfy.Core.Interfaces
@inject ISpiralfyPlayer Player
@inject ISpiralfyService Service

<h1>Play</h1>

<p>Hi @username!</p>

@if (currentlyPlaying is null)
{
    <small>
        You should try to play something!
        @if (surpriseTrack is not null)
        {
            <span>You can also click <a href="" @onclick:preventDefault @onclick="PlaySurprise">here</a> for a surprise!</span>
        }
    </small>
    return;
}
<div class="card" style="width: 18rem;">
    @switch (currentlyPlaying)
    {
        case FullTrack track:
            <img class="card-img-top" style="object-fit: cover" src="@track.Album.Images.First().Url" alt="">
            <div class="card-body">
                <div>
                    <h4 class="card-title">@track.Name</h4>
                    <p>@track.Album.Name</p>
                    <small>@string.Join(", ", track.Artists.Select(a => a.Name))</small>
                </div>
            </div>
            break;
        case FullEpisode episode:
            <img class="card-img-top" src="@episode.Images.First().Url" alt="" width="200" height="200">
            <div class="card-body">
                <div>
                    <h4>@episode.Name</h4>
                    <small>@episode.Description</small>
                </div>
            </div>
            break;
    }
    <div class="d-flex justify-content-around mb-2">
        <button @onclick="PlayPause" class="btn btn-primary px-4">
            <img src="https://api.iconify.design/fa-solid:@(playing ? "pause" : "play").svg?height=16&color=%23ffffff"/>
        </button>
        <button @onclick="PlaySurprise" class="btn btn-light px-4">
            <img src="https://api.iconify.design/ph:circle-wavy-question-light.svg?height=16"/>
        </button>
    </div>
</div>

@code {
    string username;
    bool playing;
    private IPlayableItem currentlyPlaying;
    private IPlayableItem surpriseTrack;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        surpriseTrack = await Service.GetTrack("4cOdK2wGLETKBW3PvgPWqT");
        username = (await Service.GetCurrentUser()).DisplayName;
        playing = await Player.IsPlaying();
        currentlyPlaying = await Player.GetCurrentlyPlaying();
    }

    async Task PlaySurprise()
    {
        await Player.Play(surpriseTrack);
        playing = true;
    }

    async Task PlayPause()
    {
        playing = await Player.PlayPause();
    }
}
